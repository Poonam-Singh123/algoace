<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        LeetCode 3461: Check If Digits Are Equal in String After Operations I (C++)
    </title>
    <link rel="stylesheet" href="/styles.min.css" />
    <link rel="stylesheet" href="/styles.css" />
    <script src="/solution.js"></script>
</head>

<body>
    <main>
        <h1>LeetCode 3461: Check If Digits Are Equal in String After Operations I (C++)</h1>

        <div class="problem-description">
            <p><strong>Problem:</strong>
                You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits: For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10. Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed. Return true if the final two digits in s are the same; otherwise, return false.
            </p>
            <p><strong>Example:</strong>
                Input: s = "3902"<br>
                Output: true<br>
                Explanation: Initially s = "3902". First operation gives "292" (12%10=2, 9%10=9, 2%10=2). Second operation gives "11" (11%10=1, 11%10=1). Since "11" has same digits, return true.
            </p>
        </div>

        <div class="code-container">
            <button class="copy-button" onclick="copyCode(this)">Copy Code</button>
            <pre><code class="language-cpp">class Solution {
public:
    bool hasSameDigits(string s) {
        int n = s.size();
        
        // Continue operations until we have exactly 2 digits
        for (int len = n - 1; len &gt; 1; len--) {
            // Process each pair of consecutive digits
            for (int i = 0; i &lt; len; i++) {
                // Calculate sum of consecutive digits modulo 10
                int digit1 = s[i] - '0';
                int digit2 = s[i + 1] - '0';
                int newDigit = (digit1 + digit2) % 10;
                
                // Replace current position with new digit
                s[i] = '0' + newDigit;
            }
        }
        
        // Check if final two digits are the same
        return s[0] == s[1];
    }
};</code></pre>
        </div>

        <a href="/" class="back-link">‚Üê Back to Home</a>
    </main>
</body>

</html>