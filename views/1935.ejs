<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        LeetCode 1935: Maximum Number of Words You Can Type (C++)
    </title>
    <link rel="stylesheet" href="/styles.min.css" />
    <link rel="stylesheet" href="/styles.css" />
    <script src="/solution.js"></script>
</head>

<body>
    <main>
        <h1>LeetCode 1935: Maximum Number of Words You Can Type (C++)</h1>

        <div class="problem-description">
            <p><strong>Problem:</strong>
                There is a malfunctioning keyboard where some letter keys do not work. All other keys on the keyboard work properly. Given a string text of words separated by a single space (no leading or trailing spaces) and a string brokenLetters of all distinct letter keys that are broken, return the number of words in text you can fully type using this keyboard.
            </p>
            <p><strong>Example:</strong>
                Input: text = "hello world", brokenLetters = "ad"<br>
                Output: 1<br>
                Explanation: We cannot type "world" because the 'd' key is broken.
            </p>
        </div>

        <div class="code-container">
            <button class="copy-button" onclick="copyCode(this)">Copy Code</button>
            <pre><code class="language-cpp">class Solution {
public:
    int canBeTypedWords(string text, string brokenLetters) {
        // Create a set of broken letters for O(1) lookup
        unordered_set&lt;char&gt; broken(brokenLetters.begin(), brokenLetters.end());
        
        int count = 0;
        stringstream ss(text);
        string word;
        
        // Process each word
        while (ss &gt;&gt; word) {
            bool canType = true;
            
            // Check if any character in the word is broken
            for (char c : word) {
                if (broken.count(c)) {
                    canType = false;
                    break;
                }
            }
            
            if (canType) {
                count++;
            }
        }
        
        return count;
    }
};</code></pre>
        </div>

        <a href="/" class="back-link">‚Üê Back to Home</a>
    </main>
</body>

</html>