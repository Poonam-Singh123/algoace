<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        LeetCode 2048: Next Greater Numerically Balanced Number (C++)
    </title>
    <link rel="stylesheet" href="/styles.min.css" />
    <link rel="stylesheet" href="/styles.css" />
    <script src="/solution.js"></script>
</head>

<body>
    <main>
        <h1>LeetCode 2048: Next Greater Numerically Balanced Number (C++)</h1>

        <div class="problem-description">
            <p><strong>Problem:</strong>
                An integer x is numerically balanced if for every digit d in the number x, there are exactly d occurrences of that digit in x. Given an integer n, return the smallest numerically balanced number strictly greater than n.
            </p>
            <p><strong>Example:</strong>
                Input: n = 1<br>
                Output: 22<br>
                Explanation: 22 is numerically balanced since the digit 2 occurs 2 times. It is also the smallest numerically balanced number strictly greater than 1.
            </p>
        </div>

        <div class="code-container">
            <button class="copy-button" onclick="copyCode(this)">Copy Code</button>
            <pre><code class="language-cpp">class Solution {
public:
    int nextBeautifulNumber(int n) {
        // Start from n + 1 and check each number
        for (int num = n + 1; ; num++) {
            if (isBalanced(num)) {
                return num;
            }
        }
        return -1;
    }
    
private:
    bool isBalanced(int num) {
        // Count frequency of each digit
        int count[10] = {0};
        int temp = num;
        
        while (temp &gt; 0) {
            int digit = temp % 10;
            
            // Digit 0 is not allowed in balanced numbers
            if (digit == 0) {
                return false;
            }
            
            count[digit]++;
            temp /= 10;
        }
        
        // Check if each digit appears exactly as many times as its value
        for (int i = 1; i &lt; 10; i++) {
            // If digit appears but count doesn't match the digit value
            if (count[i] &gt; 0 &amp;&amp; count[i] != i) {
                return false;
            }
        }
        
        return true;
    }
};</code></pre>
        </div>

        <a href="/" class="back-link">‚Üê Back to Home</a>
    </main>
</body>

</html>