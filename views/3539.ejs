<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        LeetCode 3539: Find Sum of Array Product of Magical Sequences (C++)
    </title>
    <link rel="stylesheet" href="/styles.min.css" />
    <link rel="stylesheet" href="/styles.css" />
    <script src="/solution.js"></script>
</head>

<body>
    <main>
        <h1>LeetCode 3539: Find Sum of Array Product of Magical Sequences (C++)</h1>

        <div class="problem-description">
            <p><strong>Problem:</strong>
                You are given two integers, m and k, and an integer array nums. A sequence of integers seq is called magical if: seq has a size of m, 0 &lt;= seq[i] &lt; nums.length for all i, and for all i from 0 to m-2, seq[i+1] - seq[i] &gt;= k. The array product of a sequence seq is defined as the product of nums[seq[0]] * nums[seq[1]] * ... * nums[seq[m-1]]. Return the sum of array products of all magical sequences modulo 10^9 + 7.
            </p>
            <p><strong>Example:</strong>
                Input: nums = [1,2,3], m = 2, k = 1<br>
                Output: 11<br>
                Explanation: Magical sequences are [0,1], [0,2], [1,2] with products 1*2=2, 1*3=3, 2*3=6. Sum = 2+3+6 = 11.
            </p>
        </div>

        <div class="code-container">
            <button class="copy-button" onclick="copyCode(this)">Copy Code</button>
            <pre><code class="language-cpp">class Solution {
public:
    int sumOfPowerfulSequences(vector&lt;int&gt;&amp; nums, int m, int k) {
        const int MOD = 1e9 + 7;
        int n = nums.size();
        
        // dp[i][j] = sum of products of all sequences of length j ending at index i
        vector&lt;vector&lt;long long&gt;&gt; dp(n, vector&lt;long long&gt;(m + 1, 0));
        
        // Base case: sequences of length 1
        for (int i = 0; i &lt; n; i++) {
            dp[i][1] = nums[i];
        }
        
        // Fill DP table
        for (int len = 2; len &lt;= m; len++) {
            for (int i = 0; i &lt; n; i++) {
                // For each previous index j where j + k &lt;= i
                for (int j = 0; j &lt;= i - k; j++) {
                    // Extend sequence ending at j to sequence ending at i
                    dp[i][len] = (dp[i][len] + dp[j][len - 1] * nums[i]) % MOD;
                }
            }
        }
        
        // Sum all sequences of length m
        long long result = 0;
        for (int i = 0; i &lt; n; i++) {
            result = (result + dp[i][m]) % MOD;
        }
        
        return result;
    }
};</code></pre>
        </div>

        <a href="/" class="back-link">‚Üê Back to Home</a>
    </main>
</body>

</html>